name: Java CI with Docker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Build Docker image
      run: |
        docker build -t my-spring-boot-app .
        docker images  # Optional: List Docker images for verification

    - name: Start PostgreSQL container
      run: docker-compose up -d db

    - name: Wait for PostgreSQL to start
      run: |
        n=0
        until [ $n -ge 5 ]
        do
          docker-compose exec -T db pg_isready -q -h db -U user -d mydatabase && break
          n=$((n+1))
          sleep 10
        done

    - name: Run Docker container
      run: |
        docker network create my-network
        docker run -d -p 8080:8080 --name my-app --network my-network my-spring-boot-app
      

    - name: Check running containers
      run: docker ps -a

    - name: Wait for the app to start
      run: |
        echo "Waiting for the app to start..."
        ATTEMPTS_LEFT=30
        until [ $ATTEMPTS_LEFT -eq 0 ] || curl -s http://localhost:8080/data/1; do
          echo "Waiting for the app to be accessible..."
          sleep 2
          ATTEMPTS_LEFT=$((ATTEMPTS_LEFT - 1))
        done
        if [ $ATTEMPTS_LEFT -eq 0 ]; then
          echo "The app did not start in time."
          docker logs my-app  # Add logs for debugging
          exit 1
        fi
        echo "The app is up - continuing"

    - name: Test API endpoint
      run: |
        RESPONSE=$(curl -s -S http://localhost:8080/data/1)
        echo "Response from API: $RESPONSE"
        # Optionally validate the response here
        if [ -z "$RESPONSE" ]; then
          echo "API response is empty or failed."
          docker logs my-app  # Add logs for debugging
          exit 1
        fi

    - name: Stop PostgreSQL container
      run: docker-compose down
